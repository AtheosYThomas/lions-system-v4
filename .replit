
entrypoint = "src/index.ts"
modules = ["nodejs-22", "postgresql-16"]
hidden = [".config", "package-lock.json"]

[gitHubImport]
requiredFiles = [".replit", "replit.nix", "package.json", "package-lock.json"]

[nix]
channel = "stable-24_11"

[deployment]
run = ["sh", "-c", "npm run init-schema && npm start"]
deploymentTarget = "autoscale"
ignorePorts = false
build = ["sh", "-c", "npm run build"]

[workflows]
runButton = "Fast Dev"

[[workflows.workflow]]
name = "Run TypeScript Server"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx ts-node src/index.ts"

[[workflows.workflow]]
name = "Build and Run"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsc"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node dist/index.js"

[[workflows.workflow]]
name = "Build and Run Production"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run build:all"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "node dist/index.js"

[[workflows.workflow]]
name = "Development Server"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run init-db"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Production Test"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsc && node dist/index.js"

[[workflows.workflow]]
name = "Development Server Fixed"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx src/init.ts"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx ts-node src/index.ts"

[[workflows.workflow]]
name = "Start Server"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx src/init.ts"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx ts-node src/index.ts"

[[workflows.workflow]]
name = "Start Server"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx src/init.ts"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx ts-node src/index.ts"

[[workflows.workflow]]
name = "Fixed Development Server"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run init-db"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Development"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run init-db"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Run Diagnostics"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx src/tools/diagnostics.ts"

[[workflows.workflow]]
name = "Run System Health Check"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx src/tools/systemHealth.ts"

[[workflows.workflow]]
name = "Test DB Init"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx src/init.ts"

[[workflows.workflow]]
name = "Run Troubleshoot"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx src/tools/troubleshoot.ts"

[[workflows.workflow]]
name = "Restart All Services"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'pkill -f "ts-node\|vite"'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run init-db"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Full System"
author = 44484841
mode = "parallel"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run init-db && npm run dev"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd client && npm run dev"

[[workflows.workflow]]
name = "Full System Restart"
author = 44484841
mode = "parallel"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run init-db && npm run dev"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd client && npm run dev"

[[workflows.workflow]]
name = "System Health Check"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx src/tools/systemHealth.ts"

[[workflows.workflow]]
name = "Full System Diagnostics"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx src/tools/diagnostics.ts"

[[workflows.workflow]]
name = "System Troubleshoot"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx src/tools/troubleshoot.ts"

[[workflows.workflow]]
name = "Basic System Check"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx -e \"import { performSystemCheck } from './src/utils/systemCheck'; performSystemCheck().then(console.log);\""

[[workflows.workflow]]
name = "Complete System Report"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=== üîç ÂÆåÊï¥Á≥ªÁµ±ÂäüËÉΩÂ†±Âëä ===\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"ÈñãÂßãÊôÇÈñì: $(date)\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"1Ô∏è‚É£ Âü∑Ë°åÁ≥ªÁµ±ÂÅ•Â∫∑Ê™¢Êü•...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx src/tools/systemHealth.ts"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"2Ô∏è‚É£ Âü∑Ë°åÂÖ®Èù¢Ë®∫Êñ∑...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx src/tools/diagnostics.ts"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"3Ô∏è‚É£ Âü∑Ë°åÂïèÈ°åÊéíÊü•...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx src/tools/troubleshoot.ts"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"4Ô∏è‚É£ Âü∑Ë°åÂü∫Êú¨Á≥ªÁµ±Ê™¢Êü•...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npx tsx -e \"import { performSystemCheck } from './src/utils/systemCheck'; performSystemCheck().then(console.log);\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"=== ‚úÖ Á≥ªÁµ±ÂäüËÉΩÂ†±ÂëäÂÆåÊàê ===\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"ÂÆåÊàêÊôÇÈñì: $(date)\""

[[workflows.workflow]]
name = "Fast Dev"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Development Server Updated"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run init-schema"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[workflows.workflow]]
name = "Clean Development Server"
author = 44484841
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run init-schema"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "npm run dev"

[[ports]]
localPort = 3000
externalPort = 80

[[ports]]
localPort = 5000
externalPort = 5000

[[ports]]
localPort = 5001
externalPort = 3000
